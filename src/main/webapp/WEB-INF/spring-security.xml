<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <http auto-config="true" use-expressions="true" disable-url-rewriting="true" entry-point-ref="authenticationEntryPoint">
        <intercept-url pattern="/" access="permitAll" />
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/jsonApi/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <intercept-url pattern="/testws" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <form-login login-page="/login" username-parameter="login" password-parameter="password" />
        <custom-filter ref="csrfCustomFilter" after="CSRF_FILTER" />
        <csrf/>

    </http>

    <beans:bean id="csrfCustomFilter" class="pl.krix.chat.custom.CustomCSRFFilter"/>

    <beans:bean id="authenticationEntryPoint" class="pl.krix.chat.custom.CustomHttpAuthenticationEntryPoint" >
        <beans:constructor-arg name="loginFormUrl" value="/login"/>
    </beans:bean>

    <authentication-manager>

        <authentication-provider>
            <password-encoder ref="encoder" />
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select login, passwordHash, enabled from ChatUser where login=?"
                               authorities-by-username-query="select login, role from ChatUser where login =?" />
        </authentication-provider>

    </authentication-manager>

    <beans:bean id="springSecurityMessagePathMatcher" class="org.springframework.util.AntPathMatcher"/>

    <websocket-message-broker>
        <intercept-message type="CONNECT" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <intercept-message type="UNSUBSCRIBE" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <intercept-message type="DISCONNECT" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <intercept-message pattern="/app/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <intercept-message pattern="/topic/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <intercept-message type="MESSAGE" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <intercept-message type="SUBSCRIBE" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
    </websocket-message-broker>

    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="10" />
    </beans:bean>

</beans:beans>
